{"version":3,"sources":["fbase.js","components/Nweet.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/ProfileNav.js","components/Router.js","components/App.js","index.js"],"names":["authService","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","Nweet","userObj","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","onSubmit","event","preventDefault","updateDoc","toggleEditing","prev","className","creatorName","onChange","value","target","type","placeholder","required","onClick","icon","faWindowClose","src","width","height","Date","createdAt","faEdit","faTrashAlt","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","getMyNweets","q","query","collection","where","uid","orderBy","getDocs","forEach","doc2","useEffect","updateProfile","currentUser","push","to","signOut","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faDove","faGoogle","faGithub","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","uuidv4","uploadString","response","getDownloadURL","now","creatorId","addDoc","maxLength","class","for","faFileImage","accept","theFile","files","reader","FileReader","onloadend","finishedEvnet","result","currentTarget","readAsDataURL","Home","nweets","setNweets","getNweets","nweetObject","onSnapshot","snapshot","nweetArray","docs","map","Navigation","ProfileNav","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a29022d3.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {getAuth} from \"firebase/auth\";\r\nimport {getFirestore} from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();","import { authService, dbService,storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport {deleteObject, ref} from 'firebase/storage';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt, faWindowClose } from '@fortawesome/free-solid-svg-icons';\r\nconst Nweet = ({userObj,nweetObj,isOwner})=>{\r\n    const [editing,setEditing]=useState(false);\r\n    const [newNweet,setNewNweet]=useState(nweetObj.text);\r\n    const onDeleteClick = async ()=>{\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if(ok){\r\n            await deleteDoc(doc(dbService, \"nweets\",nweetObj.id));\r\n            if(nweetObj.attachmentUrl !== \"\")\r\n                await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n        }\r\n    }\r\n    const onSubmit = async(event)=>{\r\n        event.preventDefault();\r\n        await updateDoc(doc(dbService, \"nweets\",nweetObj.id),{\r\n            text:newNweet\r\n        });\r\n        setEditing(false);\r\n    }\r\n    const onChange = (event)=>{\r\n        const {target:{value}}=event;\r\n        setNewNweet(value);\r\n    }\r\n    const toggleEditing = () =>setEditing((prev)=>!prev);\r\n    return(\r\n        <div>\r\n            {\r\n                editing ? \r\n                <div className=\"tweetContainer\">\r\n                    <div className=\"tweetProfile\">\r\n                        <div className=\"bold userName\">{nweetObj.creatorName}</div>\r\n                    </div>\r\n                    <form className=\"editForm\" onSubmit={onSubmit}>\r\n                        <input onChange={onChange} type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required/>\r\n                        <input type=\"submit\" value=\"Update\"/>\r\n                    </form>\r\n                    <FontAwesomeIcon className=\"editCancel\" onClick={toggleEditing} icon={faWindowClose}/> \r\n                </div> :\r\n                <div className=\"tweetContainer\">\r\n                    <div className=\"tweetProfile\">\r\n                        <div className=\"bold userName\">{nweetObj.creatorName}</div>\r\n                        \r\n                    </div>\r\n                    <div className=\"nweet\">\r\n\r\n                        {nweetObj.attachmentUrl && <img className=\"image\" src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />}\r\n                        <h4>{nweetObj.text}</h4>                \r\n                        {isOwner ?\r\n                        <div className=\"deleteAndEdit\">\r\n                            <div className=\"createdAt\">{Date(nweetObj.createdAt)}</div>\r\n                            <button onClick={toggleEditing}><FontAwesomeIcon icon={faEdit}/></button>\r\n                            <button onClick={onDeleteClick}><FontAwesomeIcon icon={faTrashAlt}/></button>\r\n                        </div>:\r\n                        <div className=\"createdAt\">{Date(nweetObj.createdAt)}</div>}\r\n                    </div>\r\n                </div>\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { authService, dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {doc, collection, addDoc,getDocs, query, where, orderBy, updateDoc} from 'firebase/firestore';\r\nimport Nweet from 'components/Nweet';\r\nimport { updateProfile } from 'firebase/auth';\r\n\r\nexport default ({userObj,refreshUser,nweetObj}) => {\r\n    const [nweets,setNweets]=useState([]);\r\n    const [newDisplayName, setNewDisplayName]=useState(userObj.displayName);\r\n    const history = useHistory();\r\n    const onLogOutClick = ()=>{\r\n        authService.signOut();\r\n        history.push('/');\r\n    }\r\n    const getMyNweets = async()=>{\r\n        const q = query(\r\n            collection(dbService,\"nweets\"),\r\n            where(\"creatorId\",\"==\",userObj.uid),\r\n            orderBy(\"createdAt\",\"desc\")\r\n        );\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach(async(doc2)=>{\r\n            await updateDoc(doc(dbService, \"nweets\",doc2.id),{\r\n                creatorName:newDisplayName\r\n            });\r\n        });\r\n    };\r\n    useEffect(()=>{\r\n        \r\n    },[]);\r\n    \r\n    const onSubmit = async (event)=>{\r\n        event.preventDefault();\r\n        getMyNweets();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await updateProfile(authService.currentUser,{\r\n                displayName:newDisplayName                \r\n            });\r\n            refreshUser();\r\n            history.push('/');\r\n        }\r\n    }\r\n    const onChange = (event)=>{\r\n        const {target:{value}}=event;\r\n        setNewDisplayName(value);\r\n    }\r\n    return (\r\n        <div className=\"editProfileContainer\">\r\n            <form className=\"editNameForm\" onSubmit={onSubmit}>\r\n                <input type=\"text\" placeholder=\"Display Name\" onChange={onChange} value={newDisplayName}/>\r\n                <input type=\"submit\" value=\"Update Profile\"/>\r\n            </form>\r\n            <Link className=\"bold home\" to='/'>Home</Link>\r\n            <button onClick={onLogOutClick}>Log Out</button>\r\n        </div>\r\n    );\r\n}","import { authService } from 'fbase';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthForm = ()=>{\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error,setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                //create account\r\n                data = await createUserWithEmailAndPassword(authService, email, password)\r\n                    \r\n            } else {\r\n                // log in\r\n                data = await signInWithEmailAndPassword(authService, email, password)\r\n                    \r\n            }\r\n            console.log(data);\r\n        }catch(error){\r\n            setError(error.message);\r\n        }\r\n    }\r\n    const toggleAccount = ()=>{\r\n        return setNewAccount((prev)=>!prev);\r\n    }\r\n    return(\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"loginForm\">\r\n                <input className=\"idStyle\" name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} />\r\n                <input className=\"passStyle\" name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\r\n                <input className=\"buttonStyle\" type=\"submit\" value={newAccount ? \"Create Acount\" : \"Log In\"} />\r\n        </form>\r\n        {error}\r\n        <span className=\"smallButton\" onClick={toggleAccount}>{newAccount ? \"Log In\" : \"Create Account\"}</span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthForm;","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, GoogleAuthProvider, GithubAuthProvider,signInWithPopup } from 'firebase/auth';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport {faDove} from '@fortawesome/free-solid-svg-icons';\r\nimport {faGoogle,faGithub} from \"@fortawesome/free-brands-svg-icons\";\r\nconst Auth = () => {\r\n    \r\n    \r\n    const onSocialClick=async (event)=>{\r\n        const {\r\n            target:{name}\r\n        }=event;\r\n        let provider;\r\n\r\n        if(name === \"google\"){\r\n            provider = new GoogleAuthProvider();\r\n        }else if(name ===\"github\"){\r\n            provider = new GithubAuthProvider();\r\n        }\r\n        await signInWithPopup(authService,provider);\r\n    }\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon className=\"faDove\" icon={faDove}/>\r\n            <AuthForm/>\r\n\r\n            <div>\r\n                <button className=\"faGoogleBtn\" onClick={onSocialClick} name=\"google\">\r\n                    <FontAwesomeIcon className=\"faGoogle\" icon={faGoogle}/>\r\n                </button>\r\n                <button className=\"faGithubBtn\" onClick={onSocialClick} name=\"github\">\r\n                    <FontAwesomeIcon className=\"faGithub\" icon={faGithub}/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Auth;","import { faFileImage } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { addDoc, collection } from 'firebase/firestore';\r\nimport { getDownloadURL, ref, uploadString } from 'firebase/storage';\r\nimport React, { useState } from 'react';\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nconst NweetFactory = ({userObj}) =>{\r\n    const [nweet,setNweet]=useState(\"\");\r\n    const [attachment,setAttachment]=useState();\r\n    const onSubmit=async (event)=>{\r\n        event.preventDefault();\r\n        try {\r\n            let attachmentUrl=\"\";\r\n            if(attachment){\r\n                const attachmentRef = ref(storageService,`${userObj.uid}/${uuidv4()}`);\r\n                const response = await uploadString(attachmentRef,attachment,\"data_url\");\r\n                attachmentUrl = await getDownloadURL(response.ref);\r\n            }\r\n            const nweetObj = {\r\n                text:nweet,\r\n                createdAt:Date.now(),\r\n                creatorId:userObj.uid,\r\n                creatorName:userObj.displayName,\r\n                attachmentUrl\r\n            }\r\n            const docRef = await addDoc(collection(dbService, \"nweets\"),nweetObj);\r\n        } catch (e) {\r\n            console.error(\"Error adding document: \", e);\r\n        }\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange=(event)=>{\r\n        const {target:{value}}=event;\r\n        setNweet(value);\r\n    };\r\n    const onClearAttachment = ()=>{\r\n        return setAttachment(null);\r\n    }\r\n    const onFileChange = (event)=>{\r\n        const {target:{files}}=event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvnet)=>{\r\n            const  {currentTarget:{result}}=finishedEvnet;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    return (\r\n        <form className=\"nweetForm\" onSubmit={onSubmit}>\r\n            <div className=\"textAndSubmit\">\r\n                <input className=\"nweetInput\" value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\r\n                <div class=\"filebox\">\r\n                    <label for=\"ex_file\"><FontAwesomeIcon icon={faFileImage}/></label>\r\n                    <input type=\"file\" id=\"ex_file\" accept=\"image/*\" onChange={onFileChange}/>\r\n                </div>\r\n                <input className=\"nweetSubmit\" type=\"submit\" value=\"NWEET\"/>\r\n            </div>\r\n                {/* <input type=\"file\" accept=\"image/*\" /> */}\r\n                \r\n\r\n                {attachment && \r\n                    <div>\r\n                        <img src={attachment} width=\"50px\" height=\"50px\"/>\r\n                        <button onClick={onClearAttachment}>Clear</button>\r\n                    </div>\r\n                }\r\n        </form>\r\n    );\r\n}\r\nexport default NweetFactory;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {dbService, storageService} from 'fbase';\r\nimport { ref, uploadString,getDownloadURL, getStorage } from \"@firebase/storage\";\r\nimport {doc, collection, addDoc,getDocs, onSnapshot, where, orderBy, query, limit} from 'firebase/firestore';\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\nimport { queryAllByAttribute } from '@testing-library/react';\r\nconst Home = ({userObj})=>{\r\n    \r\n    const [nweets,setNweets]=useState([]);\r\n    const getNweets = async()=>{\r\n        // const dbnweets = await getDocs(collection(dbService, \"nweets\"));\r\n        // dbnweets.forEach((doc) => {\r\n        //     const nweetObject={\r\n        //         ...doc.data(),\r\n        //         id:doc.id,\r\n        //     };\r\n        //     setNweets((prev)=>[nweetObject,...prev]);\r\n        // });\r\n\r\n        const q = query(\r\n            collection(dbService,\"nweets\"),\r\n            orderBy(\"createdAt\",\"desc\")\r\n        );\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((doc) => {\r\n            const nweetObject={\r\n                ...doc.data(),\r\n                id:doc.id,\r\n            };\r\n            setNweets((prev)=>[nweetObject,...prev]);\r\n        });\r\n        \r\n          \r\n    }\r\n    useEffect(()=>{\r\n        getNweets();\r\n        const q = query(\r\n            collection(dbService,\"nweets\"),\r\n            orderBy(\"createdAt\",\"desc\")\r\n        );\r\n        const unsub = onSnapshot(q, (snapshot) => {\r\n            const nweetArray = snapshot.docs.map(doc=>({id:doc.id,...doc.data()}));\r\n            setNweets(nweetArray);\r\n        });\r\n    },[])\r\n    \r\n    \r\n    \r\n    return(\r\n        <div>\r\n            <NweetFactory userObj={userObj}/>\r\n            <div className=\"nweets\">\r\n            {nweets.map((nweet)=>(\r\n                <Nweet userObj={userObj} key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>\r\n            ))}\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\nexport default Home;","import { faCrow, faDove } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Navigation = ({userObj}) => {\r\n    return (\r\n        <nav>\r\n            <ul className=\"navList\">\r\n                <li><Link to='/'><FontAwesomeIcon className=\"faDove\" icon={faDove}/></Link></li>\r\n                {userObj && <li><Link className=\"bold\" to='/profile'>{userObj.displayName}</Link><sapn>님 안녕하세요</sapn></li>}\r\n\r\n            </ul>\r\n        </nav>\r\n        );\r\n}\r\nexport default Navigation;\r\n","import { faCrow, faDove } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst ProfileNav = ({userObj}) => {\r\n    return (\r\n        <nav>\r\n            <ul className=\"navList\">\r\n                <li><Link to='/'><FontAwesomeIcon className=\"faDove\" icon={faDove}/></Link></li>\r\n                {userObj && <li><Link className=\"bold\" to='/profile'>{userObj.displayName}</Link><sapn>님 이름을 변경할 수 있습니다.</sapn></li>}\r\n\r\n            </ul>\r\n        </nav>\r\n        );\r\n}\r\nexport default ProfileNav;\r\n","import React,{useState} from 'react';\r\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom';\r\nimport Profile from 'routes/Profile';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from './Navigation';\r\nimport ProfileNav from './ProfileNav';\r\n\r\n const AppRouter = ({refreshUser, isLoggedIn, userObj})=>{\r\n    return(\r\n    <Router>\r\n        <Switch>\r\n            {isLoggedIn ? \r\n            <>\r\n            <Route exact path='/'>\r\n                <Navigation userObj={userObj}/>\r\n                <Home userObj = {userObj}/>\r\n            </Route>\r\n            <Route exact path='/profile'>\r\n                <ProfileNav userObj={userObj}/>\r\n                <Profile refreshUser={refreshUser} userObj = {userObj}/>\r\n            </Route>\r\n            </> :\r\n            <Route exact path='/'>\r\n                <Auth/>\r\n            </Route>\r\n            }\r\n        </Switch>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","import React,{useEffect, useState} from 'react';\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n  const [init,setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj,setUserObj]=useState(null);\n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setIsLoggedIn(true);\n        if(!user.displayName){\n          setUserObj({\n            displayName:\"이름없음\",\n            uid:user.uid\n          });\n        }else{\n          setUserObj({\n            displayName:user.displayName,\n            uid:user.uid\n          });\n        }\n      }else{\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setInit(true);\n    })\n  }, []);\n  const refreshUser=()=>{\n    const user = authService.currentUser;\n    if(!user.displayName){\n      setUserObj({\n        displayName:\"이름없음\",\n        uid:user.uid\n      });\n    }else{\n      setUserObj({\n        displayName:user.displayName,\n        uid:user.uid\n      });\n    }\n  }\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj}/> : \"Initializing...\"}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"reset.css\";\nimport \"App.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}